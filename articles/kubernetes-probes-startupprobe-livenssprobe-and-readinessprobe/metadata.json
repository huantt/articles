{"url":"https://dev.to/jacktt/kubernetes-probes-livenssprobe-readinessprobe-and-startupprobe-3j37","slug":"kubernetes-probes-startupprobe-livenssprobe-and-readinessprobe","title":"Kubernetes probes: startupProbe, livenssProbe, and readinessProbe","description":"Liveness   Liveness probes determine when to restart a container.   If the liveness probe...","body_markdown":"## Liveness\nLiveness probes determine when to restart a container. \n\nIf the liveness probe fails, Kubernetes considers the container to be unhealthy and takes appropriate action, such as restarting the container. Liveness probes are essential for applications that can encounter runtime issues or deadlock situations.\n\n## Readiness\nReadiness probes determine when a container is **ready to start accepting traffic**. \n\nThis is useful when waiting for an application to perform time-consuming initial tasks, such as establishing network connections, loading files, and warming caches.\n\nIf the readiness probe returns a failed state, Kubernetes removes the pod from all matching service endpoints.\n\n## Startup probe\nA startup probe verifies whether the application within a container is started. This can be used to adopt liveness checks on slow starting containers, avoiding them getting killed by the kubelet before they are up and running.\n\n**If such a probe is configured, it disables liveness and readiness checks until it succeeds.**\n\n**This type of probe is only executed at startup, unlike readiness probes, which are run periodically.**\n\n```yaml\nstartupProbe:\n  httpGet:\n    path: /health/readiness\n    port: 8080\n  failureThreshold: 30\n  periodSeconds: 10\n```\n\n## Probes configuration\n\n```yaml\nreadinessProbe:\n    httpGet:\n        path: /health/readiness\n        port: 8080\n    initialDelaySeconds: 10\n    periodSeconds: 5\n    successThreshold: 1\n    failureThreshold: 3\n    timeoutSeconds: 30\n```\n\n- `initialDelaySeconds`: The delay in seconds before the first liveness probe is performed. This allows time for the container to start up.\n\n- `periodSeconds`: The time interval between consecutive liveness probes. It defines how frequently the probe should be performed.\n\n- `timeoutSeconds`: The maximum amount of time given to each liveness probe to complete. If the probe exceeds this timeout, it is considered failed.\n\n- `failureThreshold`: The number of consecutive failures allowed before considering the container as unhealthy and triggering the defined action (e.g., container restart).\n\n- `successThreshold`: The number of consecutive successful probes required to transition a container from an unhealthy to a healthy state. This parameter helps prevent quick flapping between unhealthy and healthy states.\n\n## Probes types\n### HTTP probe\n```yaml\nreadinessProbe:\n    httpGet:\n        path: /readiness\n        port: 8080\n```\nIt sends an HTTP GET request to a specified endpoint on a container's IP address and port. If the endpoint returns a successful HTTP status code (2xx or 3xx), the probe considers the container as healthy. Otherwise, it assumes the container is unhealthy.\n\n### TCP probe\n```yaml\nreadinessProbe:\n    tcpSocket:\n        port: 8080\n```\n\nIt attempts to open a TCP connection to a specified port on the container. If the connection is successfully established, the container is considered healthy. Otherwise, it is considered unhealthy.\n\n\n### Command probe\n```yaml\nreadinessProbe:\n  exec:\n    command:\n    - /script/readiness.sh\n```\n\nIt executes a specified command inside the container. If the command exits with a zero status code, the container is considered healthy. Otherwise, it is considered unhealthy.\n\n### gRPC Probe\n```yaml\nlivenessProbe:\n    grpc:\n        port: 8080\n```\n\nSince Kubernetes version 1.24, the gRPC handler can be configured to be used by the kubelet for application lifetime checking. To configure checks that use gRPC, you must enable the GRPCContainerProbe function gate. You must configure the port to use a gRPC probe, and if the health endpoint is configured on a non-default service, you also need to specify the service.\n\n## References\n- https://kubeops.net/blog/kubernetes-probes\n- https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/","body_html":"\u003ch2\u003e\n  \u003ca name=\"liveness\" href=\"#liveness\"\u003e\n  \u003c/a\u003e\n  Liveness\n\u003c/h2\u003e\n\n\u003cp\u003eLiveness probes determine when to restart a container. \u003c/p\u003e\n\n\u003cp\u003eIf the liveness probe fails, Kubernetes considers the container to be unhealthy and takes appropriate action, such as restarting the container. Liveness probes are essential for applications that can encounter runtime issues or deadlock situations.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"readiness\" href=\"#readiness\"\u003e\n  \u003c/a\u003e\n  Readiness\n\u003c/h2\u003e\n\n\u003cp\u003eReadiness probes determine when a container is \u003cstrong\u003eready to start accepting traffic\u003c/strong\u003e. \u003c/p\u003e\n\n\u003cp\u003eThis is useful when waiting for an application to perform time-consuming initial tasks, such as establishing network connections, loading files, and warming caches.\u003c/p\u003e\n\n\u003cp\u003eIf the readiness probe returns a failed state, Kubernetes removes the pod from all matching service endpoints.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"startup-probe\" href=\"#startup-probe\"\u003e\n  \u003c/a\u003e\n  Startup probe\n\u003c/h2\u003e\n\n\u003cp\u003eA startup probe verifies whether the application within a container is started. This can be used to adopt liveness checks on slow starting containers, avoiding them getting killed by the kubelet before they are up and running.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eIf such a probe is configured, it disables liveness and readiness checks until it succeeds.\u003c/strong\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eThis type of probe is only executed at startup, unlike readiness probes, which are run periodically.\u003c/strong\u003e\u003cbr\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight yaml\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003estartupProbe\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ehttpGet\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/health/readiness\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e8080\u003c/span\u003e\n  \u003cspan class=\"na\"\u003efailureThreshold\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e30\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eperiodSeconds\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e10\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003ch2\u003e\n  \u003ca name=\"probes-configuration\" href=\"#probes-configuration\"\u003e\n  \u003c/a\u003e\n  Probes configuration\n\u003c/h2\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight yaml\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003ereadinessProbe\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ehttpGet\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/health/readiness\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e8080\u003c/span\u003e\n    \u003cspan class=\"na\"\u003einitialDelaySeconds\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e10\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eperiodSeconds\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e5\u003c/span\u003e\n    \u003cspan class=\"na\"\u003esuccessThreshold\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"na\"\u003efailureThreshold\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e3\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etimeoutSeconds\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e30\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einitialDelaySeconds\u003c/code\u003e: The delay in seconds before the first liveness probe is performed. This allows time for the container to start up.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eperiodSeconds\u003c/code\u003e: The time interval between consecutive liveness probes. It defines how frequently the probe should be performed.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etimeoutSeconds\u003c/code\u003e: The maximum amount of time given to each liveness probe to complete. If the probe exceeds this timeout, it is considered failed.\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003efailureThreshold\u003c/code\u003e: The number of consecutive failures allowed before considering the container as unhealthy and triggering the defined action (e.g., container restart).\u003c/p\u003e\u003c/li\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003esuccessThreshold\u003c/code\u003e: The number of consecutive successful probes required to transition a container from an unhealthy to a healthy state. This parameter helps prevent quick flapping between unhealthy and healthy states.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"probes-types\" href=\"#probes-types\"\u003e\n  \u003c/a\u003e\n  Probes types\n\u003c/h2\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"http-probe\" href=\"#http-probe\"\u003e\n  \u003c/a\u003e\n  HTTP probe\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight yaml\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003ereadinessProbe\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ehttpGet\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/readiness\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e8080\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eIt sends an HTTP GET request to a specified endpoint on a container's IP address and port. If the endpoint returns a successful HTTP status code (2xx or 3xx), the probe considers the container as healthy. Otherwise, it assumes the container is unhealthy.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"tcp-probe\" href=\"#tcp-probe\"\u003e\n  \u003c/a\u003e\n  TCP probe\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight yaml\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003ereadinessProbe\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etcpSocket\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e8080\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eIt attempts to open a TCP connection to a specified port on the container. If the connection is successfully established, the container is considered healthy. Otherwise, it is considered unhealthy.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"command-probe\" href=\"#command-probe\"\u003e\n  \u003c/a\u003e\n  Command probe\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight yaml\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003ereadinessProbe\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eexec\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ecommand\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003e/script/readiness.sh\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eIt executes a specified command inside the container. If the command exits with a zero status code, the container is considered healthy. Otherwise, it is considered unhealthy.\u003c/p\u003e\n\n\u003ch3\u003e\n  \u003ca name=\"grpc-probe\" href=\"#grpc-probe\"\u003e\n  \u003c/a\u003e\n  gRPC Probe\n\u003c/h3\u003e\n\n\n\n\u003cdiv class=\"highlight js-code-highlight\"\u003e\n\u003cpre class=\"highlight yaml\"\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003elivenessProbe\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003egrpc\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eport\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"m\"\u003e8080\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class=\"highlight__panel js-actions-panel\"\u003e\n\u003cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003e\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003e\u003ctitle\u003eEnter fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003e\u003ctitle\u003eExit fullscreen mode\u003c/title\u003e\n    \u003cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cp\u003eSince Kubernetes version 1.24, the gRPC handler can be configured to be used by the kubelet for application lifetime checking. To configure checks that use gRPC, you must enable the GRPCContainerProbe function gate. You must configure the port to use a gRPC probe, and if the health endpoint is configured on a non-default service, you also need to specify the service.\u003c/p\u003e\n\n\u003ch2\u003e\n  \u003ca name=\"references\" href=\"#references\"\u003e\n  \u003c/a\u003e\n  References\n\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://kubeops.net/blog/kubernetes-probes\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://kubeops.net/blog/kubernetes-probes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n","thumbnail":"","author":{"id":"jacktt","name":"JackTT"},"created_at":"2024-08-07T03:27:43Z","updated_at":null,"tags":[]}